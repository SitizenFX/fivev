--- a/net/minecraft/stats/RecipeBookSettings.java
+++ b/net/minecraft/stats/RecipeBookSettings.java
@@ -12,6 +_,7 @@
 import net.minecraft.network.codec.StreamCodec;
 import net.minecraft.world.inventory.RecipeBookType;
 
+// TODO: [Forge][Custom Recipe Book Types - Add Optional<Map<RecipeBookType, TypeSettings>> to network codecs
 public final class RecipeBookSettings {
     public static final StreamCodec<FriendlyByteBuf, RecipeBookSettings> STREAM_CODEC = StreamCodec.composite(
         RecipeBookSettings.TypeSettings.STREAM_CODEC,
@@ -148,5 +_,13 @@
                     .apply(p_407394_, RecipeBookSettings.TypeSettings::new)
             );
         }
+    }
+
+    // FORGE -- called automatically on Enum creation - used for serialization
+    public static void register(RecipeBookType type) {
+        String name = type.name().toLowerCase(java.util.Locale.ROOT).replace("_","");
+        var codec = TypeSettings.codec("is" + name + "GuiOpen", "is" + name + "FilteringCraftable");
+        //TAG_FIELDS.put(type, Pair.of(openTag, filteringTag));
+        throw new IllegalStateException("This is not implemented yet, poke Forge if you actually use this");
     }
 }
