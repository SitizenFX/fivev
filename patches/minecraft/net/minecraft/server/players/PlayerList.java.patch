--- a/net/minecraft/server/players/PlayerList.java
+++ b/net/minecraft/server/players/PlayerList.java
@@ -123,6 +_,7 @@
     private int simulationDistance;
     private boolean allowCommandsForAllPlayers;
     private int sendAllPlayerInfoIn;
+    private final List<ServerPlayer> playersView = java.util.Collections.unmodifiableList(players);
 
     public PlayerList(MinecraftServer p_203842_, LayeredRegistryAccess<RegistryLayer> p_251844_, PlayerDataStorage p_203844_, NotificationService p_425184_) {
         this.server = p_203842_;
@@ -180,6 +_,7 @@
         servergamepacketlistenerimpl.send(new ClientboundPlayerAbilitiesPacket(p_11263_.getAbilities()));
         servergamepacketlistenerimpl.send(new ClientboundSetHeldSlotPacket(p_11263_.getInventory().getSelectedSlot()));
         RecipeManager recipemanager = this.server.getRecipeManager();
+        net.minecraftforge.event.OnDatapackSyncEvent.BUS.post(new net.minecraftforge.event.OnDatapackSyncEvent(this, p_11263_));
         servergamepacketlistenerimpl.send(new ClientboundUpdateRecipesPacket(recipemanager.getSynchronizedItemProperties(), recipemanager.getSynchronizedStonecutterRecipes()));
         this.sendPlayerPermissionLevel(p_11263_);
         p_11263_.getStats().markAllDirty();
@@ -210,6 +_,7 @@
         this.sendActivePlayerEffects(p_11263_);
         p_11263_.initInventoryMenu();
         this.server.notificationManager().playerJoined(p_11263_);
+        net.minecraftforge.event.ForgeEventFactory.firePlayerLoggedIn(p_11263_);
     }
 
     protected void updateEntireScoreboard(ServerScoreboard p_11274_, ServerPlayer p_11275_) {
@@ -279,6 +_,7 @@
     }
 
     protected void save(ServerPlayer p_11277_) {
+        if (p_11277_.connection == null) return; // Not sure if still needed -Paint_Ninja
         this.playerIo.save(p_11277_);
         ServerStatsCounter serverstatscounter = this.stats.get(p_11277_.getUUID());
         if (serverstatscounter != null) {
@@ -292,6 +_,7 @@
     }
 
     public void remove(ServerPlayer p_11287_) {
+        net.minecraftforge.event.ForgeEventFactory.firePlayerLoggedOut(p_11287_);
         ServerLevel serverlevel = p_11287_.level();
         p_11287_.awardStat(Stats.LEAVE_GAME);
         this.save(p_11287_);
@@ -413,6 +_,7 @@
         this.playersByUUID.put(serverplayer.getUUID(), serverplayer);
         serverplayer.initInventoryMenu();
         serverplayer.setHealth(serverplayer.getHealth());
+        net.minecraftforge.event.ForgeEventFactory.firePlayerRespawnEvent(serverplayer, p_11238_);
         ServerPlayer.RespawnConfig serverplayer$respawnconfig = serverplayer.getRespawnConfig();
         if (!p_11238_ && serverplayer$respawnconfig != null) {
             LevelData.RespawnData leveldata$respawndata = serverplayer$respawnconfig.respawnData();
@@ -526,6 +_,7 @@
     }
 
     public void op(NameAndId p_425211_, Optional<Integer> p_427477_, Optional<Boolean> p_426308_) {
+        if (net.minecraftforge.event.ForgeEventFactory.onPermissionChanged(p_425211_, this.server.operatorUserPermissionLevel(), this)) return;
         this.ops
             .add(new ServerOpListEntry(p_425211_, p_427477_.orElse(this.server.operatorUserPermissionLevel()), p_426308_.orElse(this.ops.canBypassPlayerLimit(p_425211_))));
         ServerPlayer serverplayer = this.getPlayer(p_425211_.id());
@@ -535,6 +_,7 @@
     }
 
     public void deop(NameAndId p_428113_) {
+        if (net.minecraftforge.event.ForgeEventFactory.onPermissionChanged(p_428113_, 0, this)) return;
         if (this.ops.remove(p_428113_)) {
             ServerPlayer serverplayer = this.getPlayer(p_428113_.id());
             if (serverplayer != null) {
@@ -746,13 +_,6 @@
         if (serverstatscounter == null) {
             File file1 = this.server.getWorldPath(LevelResource.PLAYER_STATS_DIR).toFile();
             File file2 = new File(file1, uuid + ".json");
-            if (!file2.exists()) {
-                File file3 = new File(file1, gameprofile.name() + ".json");
-                Path path = file3.toPath();
-                if (FileUtil.isPathNormalized(path) && FileUtil.isPathPortable(path) && path.startsWith(file1.getPath()) && file3.isFile()) {
-                    file3.renameTo(file2);
-                }
-            }
 
             serverstatscounter = new ServerStatsCounter(this.server, file2);
             this.stats.put(uuid, serverstatscounter);
@@ -797,7 +_,7 @@
     }
 
     public List<ServerPlayer> getPlayers() {
-        return this.players;
+        return this.playersView; //Unmodifiable view, we don't want people removing things without us knowing.
     }
 
     @Nullable
@@ -825,6 +_,7 @@
             playeradvancements.reload(this.server.getAdvancements());
         }
 
+        net.minecraftforge.event.OnDatapackSyncEvent.BUS.post(new net.minecraftforge.event.OnDatapackSyncEvent(this, null));
         this.broadcastAll(new ClientboundUpdateTagsPacket(TagNetworkSerialization.serializeTagsToNetwork(this.registries)));
         RecipeManager recipemanager = this.server.getRecipeManager();
         ClientboundUpdateRecipesPacket clientboundupdaterecipespacket = new ClientboundUpdateRecipesPacket(recipemanager.getSynchronizedItemProperties(), recipemanager.getSynchronizedStonecutterRecipes());
@@ -837,5 +_,9 @@
 
     public boolean isAllowCommandsForAllPlayers() {
         return this.allowCommandsForAllPlayers;
+    }
+
+    public PlayerDataStorage getPlayerIo() {
+        return this.playerIo;
     }
 }
