--- a/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/net/minecraft/server/dedicated/DedicatedServer.java
@@ -97,6 +_,8 @@
     @Nullable
     private ManagementServer jsonRpcServer;
     private long lastHeartbeat;
+    @Nullable
+    private net.minecraft.client.server.LanServerPinger dediLanPinger;
 
     public DedicatedServer(
         Thread p_214789_,
@@ -192,6 +_,7 @@
         Thread thread1 = new Thread("Server console handler") {
             @Override
             public void run() {
+                if (net.minecraftforge.server.console.TerminalHandler.handleCommands(DedicatedServer.this)) return;
                 BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(System.in, StandardCharsets.UTF_8));
 
                 String s3;
@@ -265,11 +_,13 @@
             this.tickTimeLogger = new RemoteSampleLogger(TpsDebugDimensions.values().length, this.debugSubscribers(), RemoteDebugSampleType.TICK_TIME);
             long j = Util.getNanos();
             this.services.nameToIdCache().resolveOfflineUsers(!this.usesAuthentication());
+            if (!net.minecraftforge.server.ServerLifecycleHooks.handleServerAboutToStart(this)) return false;
             LOGGER.info("Preparing level \"{}\"", this.getLevelIdName());
             this.loadLevel();
             long k = Util.getNanos() - j;
             String s2 = String.format(Locale.ROOT, "%.3fs", k / 1.0E9);
             LOGGER.info("Done ({})! For help, type \"help\"", s2);
+            this.nextTickTimeNanos = Util.getNanos(); //Forge: Update server time to prevent watchdog/spaming during long load.
             if (dedicatedserverproperties.announcePlayerAchievements != null) {
                 this.getGameRules().getRule(GameRules.RULE_ANNOUNCE_ADVANCEMENTS).set(dedicatedserverproperties.announcePlayerAchievements, this);
             }
@@ -298,7 +_,12 @@
             }
 
             this.notificationManager().serverStarted();
-            return true;
+            if (net.minecraftforge.common.ForgeConfig.SERVER.advertiseDedicatedServerToLan.get()) {
+                this.dediLanPinger = new net.minecraft.client.server.LanServerPinger(this.getMotd(), String.valueOf(this.getServerPort()));
+                this.dediLanPinger.start();
+            }
+
+            return net.minecraftforge.server.ServerLifecycleHooks.handleServerStarting(this);
         }
     }
 
@@ -510,6 +_,13 @@
         if (this.gui == null) {
             this.gui = MinecraftServerGui.showFrameFor(this);
         }
+
+        if (this.dediLanPinger != null) {
+            this.dediLanPinger.interrupt();
+            this.dediLanPinger = null;
+        }
+
+        net.minecraftforge.fml.config.ConfigTracker.INSTANCE.forceUnload();
     }
 
     @Override
@@ -725,8 +_,13 @@
 
     @Override
     public void stopServer() {
+        net.minecraftforge.event.GameShuttingDownEvent.BUS.post(new net.minecraftforge.event.GameShuttingDownEvent());
         this.notificationManager().serverShuttingDown();
         super.stopServer();
+        if (this.dediLanPinger != null) {
+            this.dediLanPinger.interrupt();
+            this.dediLanPinger = null;
+        }
         Util.shutdownExecutors();
     }
 
