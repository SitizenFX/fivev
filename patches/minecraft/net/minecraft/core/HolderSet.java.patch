--- a/net/minecraft/core/HolderSet.java
+++ b/net/minecraft/core/HolderSet.java
@@ -15,7 +_,7 @@
 import net.minecraft.util.RandomSource;
 import org.jetbrains.annotations.VisibleForTesting;
 
-public interface HolderSet<T> extends Iterable<Holder<T>> {
+public interface HolderSet<T> extends Iterable<Holder<T>>, net.minecraftforge.common.extensions.IForgeHolderSet<T> {
     Stream<Holder<T>> stream();
 
     int size();
@@ -174,6 +_,7 @@
 
         public void bind(List<Holder<T>> p_205836_) {
             this.contents = List.copyOf(p_205836_);
+            this.invalidationCallbacks.forEach(Runnable::run); // FORGE: invalidate listeners when tags rebind
         }
 
         public TagKey<T> key() {
@@ -217,6 +_,12 @@
         @Override
         public boolean canSerializeIn(HolderOwner<T> p_256542_) {
             return this.owner.canSerializeIn(p_256542_);
+        }
+
+        // FORGE: Keep a list of invalidation callbacks so they can be run when tags rebind
+        private List<Runnable> invalidationCallbacks = new java.util.ArrayList<>();
+        public void addInvalidationListener(Runnable runnable) {
+           invalidationCallbacks.add(runnable);
         }
     }
 }
