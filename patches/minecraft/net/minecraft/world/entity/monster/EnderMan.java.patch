--- a/net/minecraft/world/entity/monster/EnderMan.java
+++ b/net/minecraft/world/entity/monster/EnderMan.java
@@ -114,7 +_,6 @@
 
     @Override
     public void setTarget(@Nullable LivingEntity p_32537_) {
-        super.setTarget(p_32537_);
         AttributeInstance attributeinstance = this.getAttribute(Attributes.MOVEMENT_SPEED);
         if (p_32537_ == null) {
             this.targetChangeTime = 0;
@@ -128,6 +_,7 @@
                 attributeinstance.addTransientModifier(SPEED_MODIFIER_ATTACKING);
             }
         }
+        super.setTarget(p_32537_); //Forge: Moved down to allow event handlers to write data manager values.
     }
 
     @Override
@@ -203,7 +_,7 @@
     }
 
     boolean isBeingStaredBy(Player p_368759_) {
-        return !LivingEntity.PLAYER_NOT_WEARING_DISGUISE_ITEM.test(p_368759_) ? false : this.isLookingAtMe(p_368759_, 0.025, true, false, new double[]{this.getEyeY()});
+        return !net.minecraftforge.common.ForgeHooks.isNotDisguised(this).test(p_368759_) ? false : this.isLookingAtMe(p_368759_, 0.025, true, false, new double[]{this.getEyeY()});
     }
 
     @Override
@@ -281,8 +_,10 @@
         boolean flag = blockstate.blocksMotion();
         boolean flag1 = blockstate.getFluidState().is(FluidTags.WATER);
         if (flag && !flag1) {
+            net.minecraftforge.event.entity.EntityTeleportEvent.EnderEntity event = net.minecraftforge.event.ForgeEventFactory.onEnderTeleport(this, p_32544_, p_32545_, p_32546_);
+            if (event.isCanceled()) return false;
             Vec3 vec3 = this.position();
-            boolean flag2 = this.randomTeleport(p_32544_, p_32545_, p_32546_, true);
+            boolean flag2 = this.randomTeleport(event.getTargetX(), event.getTargetY(), event.getTargetZ(), true);
             if (flag2) {
                 this.level().gameEvent(GameEvent.TELEPORT, vec3, GameEvent.Context.of(this));
                 if (!this.isSilent()) {
@@ -437,7 +_,7 @@
             if (this.enderman.getCarriedBlock() == null) {
                 return false;
             } else {
-                return !getServerLevel(this.enderman).getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING) ? false : this.enderman.getRandom().nextInt(reducedTickDelay(2000)) == 0;
+                return !net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(getServerLevel(this.enderman), this.enderman) ? false : this.enderman.getRandom().nextInt(reducedTickDelay(2000)) == 0;
             }
         }
 
@@ -455,7 +_,7 @@
             BlockState blockstate2 = this.enderman.getCarriedBlock();
             if (blockstate2 != null) {
                 blockstate2 = Block.updateFromNeighbourShapes(blockstate2, this.enderman.level(), blockpos);
-                if (this.canPlaceBlock(level, blockpos, blockstate2, blockstate, blockstate1, blockpos1)) {
+                if (this.canPlaceBlock(level, blockpos, blockstate2, blockstate, blockstate1, blockpos1) && !net.minecraftforge.event.ForgeEventFactory.onBlockPlace(enderman, net.minecraftforge.common.util.BlockSnapshot.create(level.dimension(), level, blockpos1), net.minecraft.core.Direction.UP)) {
                     level.setBlock(blockpos, blockstate2, 3);
                     level.gameEvent(GameEvent.BLOCK_PLACE, blockpos, GameEvent.Context.of(this.enderman, blockstate2));
                     this.enderman.setCarriedBlock(null);
@@ -467,6 +_,7 @@
             return p_32562_.isAir()
                 && !p_32563_.isAir()
                 && !p_32563_.is(Blocks.BEDROCK)
+                && !p_32563_.is(net.minecraftforge.common.Tags.Blocks.ENDERMAN_PLACE_ON_BLACKLIST)
                 && p_32563_.isCollisionShapeFullBlock(p_32559_, p_32564_)
                 && p_32561_.canSurvive(p_32559_, p_32560_)
                 && p_32559_.getEntities(this.enderman, AABB.unitCubeFromLowerCorner(Vec3.atLowerCornerOf(p_32560_))).isEmpty();
@@ -576,7 +_,7 @@
             if (this.enderman.getCarriedBlock() != null) {
                 return false;
             } else {
-                return !getServerLevel(this.enderman).getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING) ? false : this.enderman.getRandom().nextInt(reducedTickDelay(20)) == 0;
+                return !net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(getServerLevel(this.enderman), this.enderman) ? false : this.enderman.getRandom().nextInt(reducedTickDelay(20)) == 0;
             }
         }
 
