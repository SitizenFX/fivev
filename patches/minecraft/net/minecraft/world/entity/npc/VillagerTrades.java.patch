--- a/net/minecraft/world/entity/npc/VillagerTrades.java
+++ b/net/minecraft/world/entity/npc/VillagerTrades.java
@@ -855,7 +_,7 @@
                 5
             )
         )
-        .build();
+        .build().stream().collect(net.minecraft.Util.toMutableList()); // Forge: Turned into an ArrayList so it can be modified in VillagerTradingManager
     public static final Map<ResourceKey<VillagerProfession>, Int2ObjectMap<VillagerTrades.ItemListing[]>> EXPERIMENTAL_TRADES = Map.of(
         VillagerProfession.LIBRARIAN,
         toIntMap(
@@ -1280,6 +_,7 @@
         private final int villagerXp;
 
         public EmeraldsForVillagerTypeItem(int p_35669_, int p_35670_, int p_35671_, Map<ResourceKey<VillagerType>, Item> p_35672_) {
+            if (false) // FORGE: Modders can add custom villager types, so remove this validation
             BuiltInRegistries.VILLAGER_TYPE.registryKeySet().stream().filter(p_397256_ -> !p_35672_.containsKey(p_397256_)).findAny().ifPresent(p_390730_ -> {
                 throw new IllegalStateException("Missing trade for villager type: " + p_390730_);
             });
@@ -1297,7 +_,9 @@
                 if (resourcekey == null) {
                     return null;
                 } else {
-                    ItemCost itemcost = new ItemCost(this.trades.get(resourcekey), this.cost);
+                    Item item = this.trades.get(resourcekey);
+                    if (item == null) return null; // FORGE: Account for modded villager types by returning null if there is no trade
+                    ItemCost itemcost = new ItemCost(item, this.cost);
                     return new MerchantOffer(itemcost, new ItemStack(Items.EMERALD), this.maxUses, this.villagerXp, 0.05F);
                 }
             } else {
