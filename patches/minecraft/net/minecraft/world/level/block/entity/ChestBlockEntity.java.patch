--- a/net/minecraft/world/level/block/entity/ChestBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/ChestBlockEntity.java
@@ -194,4 +_,43 @@
         Block block = p_155335_.getBlock();
         p_155333_.blockEvent(p_155334_, block, 1, p_155337_);
     }
+
+    private net.minecraftforge.common.util.LazyOptional<net.minecraftforge.items.IItemHandlerModifiable> chestHandler;
+    @Override
+    public void setBlockState(BlockState p_155251_) {
+        super.setBlockState(p_155251_);
+        if (this.chestHandler != null) {
+            var oldHandler = this.chestHandler;
+            this.chestHandler = null;
+            oldHandler.invalidate();
+        }
+    }
+
+    @Override
+    public <T> net.minecraftforge.common.util.LazyOptional<T> getCapability(net.minecraftforge.common.capabilities.Capability<T> cap, Direction side) {
+        if (cap == net.minecraftforge.common.capabilities.ForgeCapabilities.ITEM_HANDLER && !this.remove) {
+            if (this.chestHandler == null)
+               this.chestHandler = net.minecraftforge.common.util.LazyOptional.of(this::createHandler);
+            return this.chestHandler.cast();
+        }
+        return super.getCapability(cap, side);
+    }
+
+    private net.minecraftforge.items.IItemHandlerModifiable createHandler() {
+        BlockState state = this.getBlockState();
+        if (!(state.getBlock() instanceof ChestBlock chestBlock)) {
+            return new net.minecraftforge.items.wrapper.InvWrapper(this);
+        }
+        Container inv = ChestBlock.getContainer(chestBlock, state, getLevel(), getBlockPos(), true);
+        return new net.minecraftforge.items.wrapper.InvWrapper(inv == null ? this : inv);
+    }
+
+    @Override
+    public void invalidateCaps() {
+        super.invalidateCaps();
+        if (chestHandler != null) {
+            chestHandler.invalidate();
+            chestHandler = null;
+        }
+    }
 }
