--- a/net/minecraft/world/level/block/FlowerPotBlock.java
+++ b/net/minecraft/world/level/block/FlowerPotBlock.java
@@ -44,9 +_,31 @@
     }
 
     public FlowerPotBlock(Block p_53528_, BlockBehaviour.Properties p_53529_) {
-        super(p_53529_);
-        this.potted = p_53528_;
-        POTTED_BY_CONTENT.put(p_53528_, this);
+        this(Blocks.FLOWER_POT == null ? null : () -> (FlowerPotBlock) net.minecraftforge.registries.ForgeRegistries.BLOCKS.getDelegateOrThrow(Blocks.FLOWER_POT).get(), () -> net.minecraftforge.registries.ForgeRegistries.BLOCKS.getDelegateOrThrow(p_53528_).get(), p_53529_);
+        if (Blocks.FLOWER_POT != null) {
+            ((FlowerPotBlock)Blocks.FLOWER_POT).addPlant(net.minecraftforge.registries.ForgeRegistries.BLOCKS.getKey(p_53528_), () -> this);
+        }
+    }
+
+    /**
+     * For mod use, eliminates the need to extend this class, and prevents modded
+     * flower pots from altering vanilla behavior.
+     *
+     * @param emptyPot    The empty pot for this pot, or null for self.
+     * @param p_53528_ The flower block.
+     * @param properties
+     */
+    public FlowerPotBlock(@org.jetbrains.annotations.Nullable java.util.function.Supplier<FlowerPotBlock> emptyPot, java.util.function.Supplier<? extends Block> p_53528_, BlockBehaviour.Properties properties) {
+        super(properties);
+        this.potted = null; // Unused, redirected by coremod
+        this.flowerDelegate = p_53528_;
+        if (emptyPot == null) {
+            this.fullPots = Maps.newHashMap();
+            this.emptyPot = null;
+        } else {
+            this.fullPots = java.util.Collections.emptyMap();
+            this.emptyPot = emptyPot;
+        }
     }
 
     @Override
@@ -59,7 +_,7 @@
         ItemStack p_329639_, BlockState p_328047_, Level p_328816_, BlockPos p_334572_, Player p_329206_, InteractionHand p_329142_, BlockHitResult p_330607_
     ) {
         BlockState blockstate = (p_329639_.getItem() instanceof BlockItem blockitem
-                ? POTTED_BY_CONTENT.getOrDefault(blockitem.getBlock(), Blocks.AIR)
+                ? getEmptyPot().fullPots.getOrDefault(net.minecraftforge.registries.ForgeRegistries.BLOCKS.getKey(blockitem.getBlock()), net.minecraftforge.registries.ForgeRegistries.BLOCKS.getDelegateOrThrow(Blocks.AIR)).get()
                 : Blocks.AIR)
             .defaultBlockState();
         if (blockstate.isAir()) {
@@ -85,7 +_,7 @@
                 p_333787_.drop(itemstack, false);
             }
 
-            p_334489_.setBlock(p_330334_, Blocks.FLOWER_POT.defaultBlockState(), 3);
+            p_334489_.setBlock(p_330334_, getEmptyPot().defaultBlockState(), 3);
             p_334489_.gameEvent(p_333787_, GameEvent.BLOCK_CHANGE, p_330334_);
             return InteractionResult.SUCCESS;
         }
@@ -117,7 +_,7 @@
     }
 
     public Block getPotted() {
-        return this.potted;
+        return flowerDelegate.get();
     }
 
     @Override
@@ -152,5 +_,24 @@
         } else {
             return p_376074_.is(Blocks.POTTED_CLOSED_EYEBLOSSOM) ? Blocks.POTTED_OPEN_EYEBLOSSOM.defaultBlockState() : p_376074_;
         }
+    }
+
+    private final Map<net.minecraft.resources.ResourceLocation, java.util.function.Supplier<? extends Block>> fullPots;
+    private final java.util.function.Supplier<FlowerPotBlock> emptyPot;
+    private final java.util.function.Supplier<? extends Block> flowerDelegate;
+
+    public FlowerPotBlock getEmptyPot() {
+        return emptyPot == null ? this : emptyPot.get();
+    }
+
+    public void addPlant(net.minecraft.resources.ResourceLocation flower, java.util.function.Supplier<? extends Block> fullPot) {
+        if (getEmptyPot() != this) {
+            throw new IllegalArgumentException("Cannot add plant to non-empty pot: " + this);
+        }
+        fullPots.put(flower, fullPot);
+    }
+
+    public Map<net.minecraft.resources.ResourceLocation, java.util.function.Supplier<? extends Block>> getFullPotsView() {
+        return java.util.Collections.unmodifiableMap(fullPots);
     }
 }
