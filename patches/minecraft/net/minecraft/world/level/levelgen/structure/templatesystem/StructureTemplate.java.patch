--- a/net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate.java
+++ b/net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate.java
@@ -253,6 +_,10 @@
         return transform(p_74565_, p_74564_.getMirror(), p_74564_.getRotation(), p_74564_.getRotationPivot());
     }
 
+    public static Vec3 transformedVec3d(StructurePlaceSettings placementIn, Vec3 pos) {
+        return transform(pos, placementIn.getMirror(), placementIn.getRotation(), placementIn.getRotationPivot());
+    }
+
     public boolean placeInWorld(
         ServerLevelAccessor p_230329_, BlockPos p_230330_, BlockPos p_230331_, StructurePlaceSettings p_230332_, RandomSource p_230333_, int p_230334_
     ) {
@@ -275,7 +_,7 @@
                 int i1 = Integer.MIN_VALUE;
                 int j1 = Integer.MIN_VALUE;
 
-                for (StructureTemplate.StructureBlockInfo structuretemplate$structureblockinfo : processBlockInfos(p_230329_, p_230330_, p_230331_, p_230332_, list)) {
+                for (StructureTemplate.StructureBlockInfo structuretemplate$structureblockinfo : processBlockInfos(p_230329_, p_230330_, p_230331_, p_230332_, list, this)) {
                     BlockPos blockpos = structuretemplate$structureblockinfo.pos;
                     if (boundingbox == null || boundingbox.isInside(blockpos)) {
                         FluidState fluidstate = p_230332_.shouldApplyWaterlogging() ? p_230329_.getFluidState(blockpos) : null;
@@ -385,7 +_,7 @@
                 }
 
                 if (!p_230332_.isIgnoreEntities()) {
-                    this.placeEntities(p_230329_, p_230330_, p_230332_.getMirror(), p_230332_.getRotation(), p_230332_.getRotationPivot(), boundingbox, p_230332_.shouldFinalizeEntities());
+                    this.addEntitiesToWorld(p_230329_, p_230330_, p_230332_);
                 }
 
                 return true;
@@ -425,12 +_,21 @@
         );
     }
 
+    /**
+     * @deprecated Forge: Use {@link #processBlockInfos(ServerLevelAccessor, BlockPos, BlockPos, StructurePlaceSettings, List, StructureTemplate)} instead.
+     */
+    @Deprecated
+    public static List<StructureTemplate.StructureBlockInfo> processBlockInfos(ServerLevelAccessor p_278297_, BlockPos p_74519_, BlockPos p_74520_, StructurePlaceSettings p_74521_, List<StructureTemplate.StructureBlockInfo> p_74522_) {
+        return processBlockInfos(p_278297_, p_74519_, p_74520_, p_74521_, p_74522_, null);
+    }
+
     public static List<StructureTemplate.StructureBlockInfo> processBlockInfos(
         ServerLevelAccessor p_278297_,
         BlockPos p_74519_,
         BlockPos p_74520_,
         StructurePlaceSettings p_74521_,
-        List<StructureTemplate.StructureBlockInfo> p_74522_
+        List<StructureTemplate.StructureBlockInfo> p_74522_,
+        @Nullable StructureTemplate template
     ) {
         List<StructureTemplate.StructureBlockInfo> list = new ArrayList<>();
         List<StructureTemplate.StructureBlockInfo> list1 = new ArrayList<>();
@@ -446,7 +_,7 @@
 
             while (structuretemplate$structureblockinfo1 != null && iterator.hasNext()) {
                 structuretemplate$structureblockinfo1 = iterator.next()
-                    .processBlock(p_278297_, p_74519_, p_74520_, structuretemplate$structureblockinfo, structuretemplate$structureblockinfo1, p_74521_);
+                    .process(p_278297_, p_74519_, p_74520_, structuretemplate$structureblockinfo, structuretemplate$structureblockinfo1, p_74521_, template);
             }
 
             if (structuretemplate$structureblockinfo1 != null) {
@@ -462,21 +_,25 @@
         return list1;
     }
 
+    private void addEntitiesToWorld(ServerLevelAccessor p_74524_, BlockPos p_74525_, StructurePlaceSettings placementIn) {
+        placeEntities(p_74524_, p_74525_, placementIn.getMirror(), placementIn.getRotation(), placementIn.getBoundingBox(), placementIn.shouldFinalizeEntities(), placementIn);
+    }
+
     private void placeEntities(
         ServerLevelAccessor p_74524_,
         BlockPos p_74525_,
         Mirror p_74526_,
         Rotation p_74527_,
-        BlockPos p_74528_,
         @Nullable BoundingBox p_74529_,
-        boolean p_74530_
+        boolean p_74530_,
+        StructurePlaceSettings placementIn
     ) {
-        for (StructureTemplate.StructureEntityInfo structuretemplate$structureentityinfo : this.entityInfoList) {
-            BlockPos blockpos = transform(structuretemplate$structureentityinfo.blockPos, p_74526_, p_74527_, p_74528_).offset(p_74525_);
+        var entities = processEntityInfos(this, p_74524_, p_74525_, placementIn, this.entityInfoList);
+        for (StructureTemplate.StructureEntityInfo structuretemplate$structureentityinfo : entities) {
+            BlockPos blockpos = structuretemplate$structureentityinfo.blockPos; // FORGE: Position will have already been transformed by processEntityInfos
             if (p_74529_ == null || p_74529_.isInside(blockpos)) {
                 CompoundTag compoundtag = structuretemplate$structureentityinfo.nbt.copy();
-                Vec3 vec3 = transform(structuretemplate$structureentityinfo.pos, p_74526_, p_74527_, p_74528_);
-                Vec3 vec31 = vec3.add(p_74525_.getX(), p_74525_.getY(), p_74525_.getZ());
+                Vec3 vec31 = structuretemplate$structureentityinfo.pos; // FORGE: Position will have already been transformed by processEntityInfos
                 ListTag listtag = new ListTag();
                 listtag.add(DoubleTag.valueOf(vec31.x));
                 listtag.add(DoubleTag.valueOf(vec31.y));
@@ -496,6 +_,24 @@
             }
         }
     }
+
+    public static List<StructureTemplate.StructureEntityInfo> processEntityInfos(@Nullable StructureTemplate template, LevelAccessor level, BlockPos seedPos, StructurePlaceSettings settings, List<StructureTemplate.StructureEntityInfo> entities) {
+        var list = new ArrayList<StructureTemplate.StructureEntityInfo>();
+        for (var entityInfo : entities) {
+           var pos = transformedVec3d(settings, entityInfo.pos).add(Vec3.atLowerCornerOf(seedPos));
+           var blockpos = calculateRelativePosition(settings, entityInfo.blockPos).offset(seedPos);
+           var info = new StructureTemplate.StructureEntityInfo(pos, blockpos, entityInfo.nbt);
+           for (var proc : settings.getProcessors()) {
+              info = proc.processEntity(level, seedPos, entityInfo, info, settings, template);
+              if (info == null)
+                 break;
+           }
+           if (info != null)
+              list.add(info);
+        }
+        return list;
+     }
+
 
     private static Optional<Entity> createEntityIgnoreException(ServerLevelAccessor p_74544_, CompoundTag p_74545_) {
         try {
