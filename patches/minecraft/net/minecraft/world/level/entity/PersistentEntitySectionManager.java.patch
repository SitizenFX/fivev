--- a/net/minecraft/world/level/entity/PersistentEntitySectionManager.java
+++ b/net/minecraft/world/level/entity/PersistentEntitySectionManager.java
@@ -71,7 +_,18 @@
         return this.addEntity(p_157534_, false);
     }
 
+    public boolean addNewEntityWithoutEvent(T entity) {
+       return this.addEntityWithoutEvent(entity, false);
+    }
+
     private boolean addEntity(T p_157539_, boolean p_157540_) {
+        if (p_157539_ instanceof Entity entity && net.minecraftforge.event.ForgeEventFactory.onEntityJoinLevel(entity, entity.level(), p_157540_)) {
+            return false;
+        }
+        return addEntityWithoutEvent(p_157539_, p_157540_);
+    }
+
+    private boolean addEntityWithoutEvent(T p_157539_, boolean p_157540_) {
         if (!this.addEntityUuid(p_157539_)) {
             return false;
         } else {
@@ -92,6 +_,10 @@
                 this.startTicking(p_157539_);
             }
 
+            if (p_157539_ instanceof Entity entity) {
+                entity.onAddedToWorld();
+            }
+
             return true;
         }
     }
@@ -369,11 +_,13 @@
 
     class Callback implements EntityInLevelCallback {
         private final T entity;
+        private final Entity realEntity;
         private long currentSectionKey;
         private EntitySection<T> currentSection;
 
         Callback(final T p_157614_, final long p_157615_, final EntitySection<T> p_157616_) {
             this.entity = p_157614_;
+            this.realEntity = p_157614_ instanceof Entity e ? e : null;
             this.currentSectionKey = p_157615_;
             this.currentSection = p_157616_;
         }
@@ -392,9 +_,13 @@
                 PersistentEntitySectionManager.this.removeSectionIfEmpty(this.currentSectionKey, this.currentSection);
                 EntitySection<T> entitysection = PersistentEntitySectionManager.this.sectionStorage.getOrCreateSection(i);
                 entitysection.add(this.entity);
+                long oldSectionKey = currentSectionKey;
                 this.currentSection = entitysection;
                 this.currentSectionKey = i;
                 this.updateStatus(visibility, entitysection.getStatus());
+                if (this.realEntity != null) {
+                    net.minecraftforge.event.ForgeEventFactory.onEntityEnterSection(this.realEntity, oldSectionKey, i);
+                }
             }
         }
 
