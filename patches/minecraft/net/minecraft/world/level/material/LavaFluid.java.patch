--- a/net/minecraft/world/level/material/LavaFluid.java
+++ b/net/minecraft/world/level/material/LavaFluid.java
@@ -92,7 +_,7 @@
                         BlockState blockstate = p_367000_.getBlockState(blockpos);
                         if (blockstate.isAir()) {
                             if (this.hasFlammableNeighbours(p_367000_, blockpos)) {
-                                p_367000_.setBlockAndUpdate(blockpos, BaseFireBlock.getState(p_367000_, blockpos));
+                                p_367000_.setBlockAndUpdate(blockpos, net.minecraftforge.event.ForgeEventFactory.fireFluidPlaceBlockEvent(p_367000_, blockpos, p_230573_, Blocks.FIRE.defaultBlockState()));
                                 return;
                             }
                         } else if (blockstate.blocksMotion()) {
@@ -106,8 +_,8 @@
                             return;
                         }
 
-                        if (p_367000_.isEmptyBlock(blockpos1.above()) && this.isFlammable(p_367000_, blockpos1)) {
-                            p_367000_.setBlockAndUpdate(blockpos1.above(), BaseFireBlock.getState(p_367000_, blockpos1));
+                        if (p_367000_.isEmptyBlock(blockpos1.above()) && this.isFlammable(p_367000_, blockpos1, Direction.UP)) {
+                            p_367000_.setBlockAndUpdate(blockpos1.above(), net.minecraftforge.event.ForgeEventFactory.fireFluidPlaceBlockEvent(p_367000_, blockpos1.above(), p_230573_, Blocks.FIRE.defaultBlockState()));
                         }
                     }
                 }
@@ -123,7 +_,7 @@
 
     private boolean hasFlammableNeighbours(LevelReader p_76228_, BlockPos p_76229_) {
         for (Direction direction : Direction.values()) {
-            if (this.isFlammable(p_76228_, p_76229_.relative(direction))) {
+            if (this.isFlammable(p_76228_, p_76229_.relative(direction), direction.getOpposite())) {
                 return true;
             }
         }
@@ -131,10 +_,17 @@
         return false;
     }
 
+    /** @deprecated Forge: use {@link LavaFluid#isFlammable(LevelReader,BlockPos,Direction)} instead */
     private boolean isFlammable(LevelReader p_76246_, BlockPos p_76247_) {
         return p_76246_.isInsideBuildHeight(p_76247_.getY()) && !p_76246_.hasChunkAt(p_76247_) ? false : p_76246_.getBlockState(p_76247_).ignitedByLava();
     }
 
+    private boolean isFlammable(LevelReader p_76246_, BlockPos p_76247_, Direction face) {
+        return p_76246_.isInsideBuildHeight(p_76247_.getY()) && !p_76246_.hasChunkAt(p_76247_)
+            ? false
+            : p_76246_.getBlockState(p_76247_).ignitedByLava() && p_76246_.getBlockState(p_76247_).isFlammable(p_76246_, p_76247_, face);
+     }
+
     @Nullable
     @Override
     public ParticleOptions getDripParticle() {
@@ -206,7 +_,8 @@
             FluidState fluidstate = p_76220_.getFluidState(p_76221_);
             if (this.is(FluidTags.LAVA) && fluidstate.is(FluidTags.WATER)) {
                 if (p_76222_.getBlock() instanceof LiquidBlock) {
-                    p_76220_.setBlock(p_76221_, Blocks.STONE.defaultBlockState(), 3);
+                    p_76220_.setBlock(p_76221_, net.minecraftforge.event.ForgeEventFactory.fireFluidPlaceBlockEvent(p_76220_, p_76221_, p_76221_, Blocks.STONE.defaultBlockState()), 3);
+
                 }
 
                 this.fizz(p_76220_, p_76221_);
