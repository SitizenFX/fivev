--- a/net/minecraft/client/multiplayer/ClientPacketListener.java
+++ b/net/minecraft/client/multiplayer/ClientPacketListener.java
@@ -477,6 +_,7 @@
 
         this.minecraft.debugRenderer.clear();
         this.minecraft.player.resetPos();
+        net.minecraftforge.client.event.ForgeEventFactoryClient.firePlayerLogin(this.minecraft.gameMode, this.minecraft.player, this.minecraft.getConnection().connection);
         this.minecraft.player.setId(p_105030_.playerId());
         this.level.addEntity(this.minecraft.player);
         this.minecraft.player.input = new KeyboardInput(this.minecraft.options);
@@ -1263,6 +_,8 @@
             localplayer1.getAttributes().assignBaseValues(localplayer.getAttributes());
         }
 
+        localplayer1.updateSyncFields(localplayer); // Forge: fix MC-10657
+        net.minecraftforge.client.event.ForgeEventFactoryClient.firePlayerRespawn(this.minecraft.gameMode, localplayer, localplayer1, localplayer1.connection.connection);
         this.level.addEntity(localplayer1);
         localplayer1.input = new KeyboardInput(this.minecraft.options);
         this.minecraft.gameMode.adjustPlayer(localplayer1);
@@ -1407,7 +_,7 @@
         PacketUtils.ensureRunningOnSameThread(p_104976_, this, this.minecraft);
         BlockPos blockpos = p_104976_.getPos();
         this.minecraft.level.getBlockEntity(blockpos, p_104976_.getType()).ifPresent(p_389343_ -> {
-            p_389343_.loadWithComponents(p_104976_.getTag(), this.registryAccess);
+            p_389343_.onDataPacket(connection, p_104976_, this.registryAccess);
             if (p_389343_ instanceof CommandBlockEntity && this.minecraft.screen instanceof CommandBlockEditScreen) {
                 ((CommandBlockEditScreen)this.minecraft.screen).updateGui();
             }
@@ -1567,7 +_,9 @@
     @Override
     public void handleCommands(ClientboundCommandsPacket p_104990_) {
         PacketUtils.ensureRunningOnSameThread(p_104990_, this, this.minecraft);
-        this.commands = new CommandDispatcher<>(p_104990_.getRoot(CommandBuildContext.simple(this.registryAccess, this.enabledFeatures)));
+        var context = CommandBuildContext.simple(this.registryAccess, this.enabledFeatures);
+        this.commands = new CommandDispatcher<>(p_104990_.getRoot(context));
+        this.commands = net.minecraftforge.client.ClientCommandHandler.mergeServerCommands(this.commands, context);
     }
 
     @Override
@@ -1668,6 +_,7 @@
         if (this.minecraft.screen instanceof RecipeUpdateListener recipeupdatelistener) {
             recipeupdatelistener.recipesUpdated();
         }
+        net.minecraftforge.client.event.ForgeEventFactoryClient.onRecipesUpdated(p_364029_);
     }
 
     @Override
@@ -1706,6 +_,8 @@
         this.fuelValues = FuelValues.vanillaBurnTimes(this.registryAccess, this.enabledFeatures);
         List<ItemStack> list1 = List.copyOf(CreativeModeTabs.searchTab().getDisplayItems());
         this.searchTrees.updateCreativeTags(list1);
+
+        net.minecraftforge.event.ForgeEventFactory.onTagsUpdated(this.registryAccess, true, this.connection.isMemoryConnection());
     }
 
     @Override
@@ -2548,6 +_,8 @@
     }
 
     public void sendChat(String p_249888_) {
+        p_249888_ = net.minecraftforge.client.ForgeHooksClient.onClientSendMessage(p_249888_);
+        if (p_249888_.isEmpty()) return;
         Instant instant = Instant.now();
         long i = Crypt.SaltSupplier.getLong();
         LastSeenMessagesTracker.Update lastseenmessagestracker$update = this.lastSeenMessages.generateAndApplyUpdate();
@@ -2556,6 +_,7 @@
     }
 
     public void sendCommand(String p_250092_) {
+        if (net.minecraftforge.client.ClientCommandHandler.runCommand(p_250092_)) return;
         SignableCommand<SharedSuggestionProvider> signablecommand = SignableCommand.of(this.parseCommand(p_250092_));
         if (signablecommand.arguments().isEmpty()) {
             this.send(new ServerboundChatCommandPacket(p_250092_));
