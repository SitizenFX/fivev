--- a/net/minecraft/client/renderer/ItemBlockRenderTypes.java
+++ b/net/minecraft/client/renderer/ItemBlockRenderTypes.java
@@ -19,6 +_,7 @@
 
 @OnlyIn(Dist.CLIENT)
 public class ItemBlockRenderTypes {
+    @Deprecated
     private static final Map<Block, ChunkSectionLayer> TYPE_BY_BLOCK = Util.make(Maps.newHashMap(), p_389364_ -> {
         ChunkSectionLayer chunksectionlayer = ChunkSectionLayer.TRIPWIRE;
         p_389364_.put(Blocks.TRIPWIRE, chunksectionlayer);
@@ -353,12 +_,15 @@
         p_389364_.put(Blocks.BUBBLE_COLUMN, chunksectionlayer3);
         p_389364_.put(Blocks.TINTED_GLASS, chunksectionlayer3);
     });
+    @Deprecated
     private static final Map<Fluid, ChunkSectionLayer> LAYER_BY_FLUID = Util.make(Maps.newHashMap(), p_404902_ -> {
         p_404902_.put(Fluids.FLOWING_WATER, ChunkSectionLayer.TRANSLUCENT);
         p_404902_.put(Fluids.WATER, ChunkSectionLayer.TRANSLUCENT);
     });
     private static boolean renderCutout;
 
+    /** @deprecated Forge: Use {@link net.minecraft.client.resources.model.BakedModel#getRenderTypes(BlockState, net.minecraft.util.RandomSource, net.minecraftforge.client.model.data.ModelData)}. */
+    @Deprecated // Note: this method does NOT support model-based render types
     public static ChunkSectionLayer getChunkRenderType(BlockState p_109283_) {
         Block block = p_109283_.getBlock();
         if (block instanceof LeavesBlock) {
@@ -369,6 +_,8 @@
         }
     }
 
+    /** @deprecated Forge: Use {@link net.minecraftforge.client.RenderTypeHelper#getMovingBlockRenderType(ChunkSectionLayer)} while iterating through {@link net.minecraft.client.resources.model.BakedModel#getRenderTypes(BlockState, net.minecraft.util.RandomSource, net.minecraftforge.client.model.data.ModelData)}. */
+    @Deprecated // Note: this method does NOT support model-based render types
     public static RenderType getMovingBlockRenderType(BlockState p_109294_) {
         Block block = p_109294_.getBlock();
         if (block instanceof LeavesBlock) {
@@ -389,11 +_,14 @@
         }
     }
 
+    /** @deprecated Forge: Use {@link net.minecraftforge.client.RenderTypeHelper#getEntityRenderType(ChunkSectionLayer)} while iterating through {@link net.minecraft.client.resources.model.BakedModel#getRenderTypes(BlockState, net.minecraft.util.RandomSource, net.minecraftforge.client.model.data.ModelData)}. */
+    @Deprecated // Note: this method does NOT support model-based render types
     public static RenderType getRenderType(BlockState p_364446_) {
         ChunkSectionLayer chunksectionlayer = getChunkRenderType(p_364446_);
         return chunksectionlayer == ChunkSectionLayer.TRANSLUCENT ? Sheets.translucentItemSheet() : Sheets.cutoutBlockSheet();
     }
 
+    /* Forge: Use {@link net.minecraft.client.resources.model.BakedModel#getRenderPasses(ItemStack, boolean)} and {@link net.minecraft.client.resources.model.BakedModel#getRenderTypes(ItemStack, boolean)}. */
     public static RenderType getRenderType(ItemStack p_363859_) {
         if (p_363859_.getItem() instanceof BlockItem blockitem) {
             Block block = blockitem.getBlock();
@@ -403,12 +_,71 @@
         }
     }
 
+    // Note: this method does NOT support model-based render types
     public static ChunkSectionLayer getRenderLayer(FluidState p_109288_) {
-        ChunkSectionLayer chunksectionlayer = LAYER_BY_FLUID.get(p_109288_.getType());
+        var chunksectionlayer = FLUID_RENDER_TYPES.get(net.minecraftforge.registries.ForgeRegistries.FLUIDS.getDelegateOrThrow(p_109288_.getType()));
         return chunksectionlayer != null ? chunksectionlayer : ChunkSectionLayer.SOLID;
     }
 
     public static void setFancy(boolean p_109292_) {
         renderCutout = p_109292_;
+    }
+
+    /** Forge: Check if we are running in {@linkplain net.minecraft.client.Minecraft#useFancyGraphics() fancy graphics} to account for fast graphics render types */
+    public static boolean isFancy() {
+        return renderCutout;
+    }
+
+    private static final java.util.Collection<ChunkSectionLayer> CUTOUT_MIPPED = java.util.EnumSet.of(ChunkSectionLayer.CUTOUT_MIPPED);
+    private static final java.util.Collection<ChunkSectionLayer> SOLID = java.util.EnumSet.of(ChunkSectionLayer.SOLID);
+    private static final Map<net.minecraft.core.Holder.Reference<Block>, java.util.Collection<ChunkSectionLayer>> BLOCK_RENDER_TYPES = Util.make(new it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap<>(TYPE_BY_BLOCK.size(), 0.5F), map -> {
+       map.defaultReturnValue(SOLID);
+       for(Map.Entry<Block, ChunkSectionLayer> entry : TYPE_BY_BLOCK.entrySet())
+          map.put(net.minecraftforge.registries.ForgeRegistries.BLOCKS.getDelegateOrThrow(entry.getKey()), java.util.EnumSet.of(entry.getValue()));
+    });
+    private static final Map<net.minecraft.core.Holder.Reference<Fluid>, ChunkSectionLayer> FLUID_RENDER_TYPES = Util.make(new it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap<>(LAYER_BY_FLUID.size(), 0.5F), map -> {
+       map.defaultReturnValue(ChunkSectionLayer.SOLID);
+       for(var entry : LAYER_BY_FLUID.entrySet())
+          map.put(net.minecraftforge.registries.ForgeRegistries.FLUIDS.getDelegateOrThrow(entry.getKey()), entry.getValue());
+    });
+
+    /** @deprecated Use {@link net.minecraft.client.resources.model.BakedModel#getRenderTypes(BlockState, net.minecraft.util.RandomSource, net.minecraftforge.client.model.data.ModelData)}. */
+    public static java.util.Collection<ChunkSectionLayer> getRenderLayers(BlockState state) {
+       Block block = state.getBlock();
+       if (block instanceof LeavesBlock) {
+          return renderCutout ? CUTOUT_MIPPED : SOLID;
+       } else {
+          return BLOCK_RENDER_TYPES.get(net.minecraftforge.registries.ForgeRegistries.BLOCKS.getDelegateOrThrow(block));
+       }
+    }
+
+    /**
+     * It is recommended to set your render type in your block model's JSON (eg. {@code "render_type": "cutout"}) so that it can be data driven.
+     * But if you want to set it in code feel free to set it here like vanilla does.
+     */
+    public static void setRenderLayer(Block block, ChunkSectionLayer type) {
+       checkClientLoading();
+       BLOCK_RENDER_TYPES.put(net.minecraftforge.registries.ForgeRegistries.BLOCKS.getDelegateOrThrow(block), java.util.EnumSet.of(type));
+    }
+
+    /**
+     * It is recommended to set your render type in your block model's JSON (eg. {@code "render_type": "cutout"}) so that it can be data driven.
+     * But if you want to set it in code feel free to set it here like vanilla does.
+     */
+    public static synchronized void setRenderLayer(Block block, ChunkSectionLayer first, ChunkSectionLayer... others) {
+       checkClientLoading();
+       BLOCK_RENDER_TYPES.put(net.minecraftforge.registries.ForgeRegistries.BLOCKS.getDelegateOrThrow(block), java.util.EnumSet.of(first, others));
+    }
+
+    public static synchronized void setRenderLayer(Fluid fluid, ChunkSectionLayer type) {
+       checkClientLoading();
+       FLUID_RENDER_TYPES.put(net.minecraftforge.registries.ForgeRegistries.FLUIDS.getDelegateOrThrow(fluid), type);
+    }
+
+    private static void checkClientLoading() {
+       com.google.common.base.Preconditions.checkState(net.minecraftforge.client.loading.ClientModLoader.isLoading(),
+               "Render layers can only be set during client loading! " +
+                       "This might ideally be done from `FMLClientSetupEvent`."
+       );
     }
 }
