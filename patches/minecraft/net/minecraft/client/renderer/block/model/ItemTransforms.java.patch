--- a/net/minecraft/client/renderer/block/model/ItemTransforms.java
+++ b/net/minecraft/client/renderer/block/model/ItemTransforms.java
@@ -20,8 +_,15 @@
     ItemTransform gui,
     ItemTransform ground,
     ItemTransform fixed,
-    ItemTransform fixedFromBottom
+    ItemTransform fixedFromBottom,
+    com.google.common.collect.ImmutableMap<ItemDisplayContext, ItemTransform> moddedTransforms
 ) {
+
+    @Deprecated
+    public ItemTransforms(ItemTransform thirdPersonLeftHand, ItemTransform thirdPersonRightHand, ItemTransform firstPersonLeftHand, ItemTransform firstPersonRightHand, ItemTransform head, ItemTransform gui, ItemTransform ground, ItemTransform fixed, ItemTransform fixedFromBottom) {
+        this(thirdPersonLeftHand, thirdPersonRightHand, firstPersonLeftHand, firstPersonRightHand, head, gui, ground, fixed, fixedFromBottom, com.google.common.collect.ImmutableMap.of());
+    }
+
     public static final ItemTransforms NO_TRANSFORMS = new ItemTransforms(
         ItemTransform.NO_TRANSFORM,
         ItemTransform.NO_TRANSFORM,
@@ -45,7 +_,7 @@
             case GROUND -> this.ground;
             case FIXED -> this.fixed;
             case ON_SHELF -> this.fixedFromBottom;
-            default -> ItemTransform.NO_TRANSFORM;
+            default -> moddedTransforms.getOrDefault(p_270619_, ItemTransform.NO_TRANSFORM);
         };
     }
 
@@ -70,8 +_,22 @@
             ItemTransform itemtransform6 = this.getTransform(p_111822_, jsonobject, ItemDisplayContext.GROUND);
             ItemTransform itemtransform7 = this.getTransform(p_111822_, jsonobject, ItemDisplayContext.FIXED);
             ItemTransform itemtransform8 = this.getTransform(p_111822_, jsonobject, ItemDisplayContext.ON_SHELF);
+            var builder = com.google.common.collect.ImmutableMap.<ItemDisplayContext, ItemTransform>builder();
+            for (ItemDisplayContext type : ItemDisplayContext.values()) {
+               if (type.isModded()) {
+                  var transform = this.getTransform(p_111822_, jsonobject, type);
+                  var fallbackType = type;
+                  while (transform == ItemTransform.NO_TRANSFORM && fallbackType.fallback() != null) {
+                     fallbackType = fallbackType.fallback();
+                     transform = this.getTransform(p_111822_, jsonobject, fallbackType);
+                  }
+                  if (transform != ItemTransform.NO_TRANSFORM)
+                     builder.put(type, transform);
+               }
+            }
+
             return new ItemTransforms(
-                itemtransform1, itemtransform, itemtransform3, itemtransform2, itemtransform4, itemtransform5, itemtransform6, itemtransform7, itemtransform8
+                itemtransform1, itemtransform, itemtransform3, itemtransform2, itemtransform4, itemtransform5, itemtransform6, itemtransform7, itemtransform8, builder.build()
             );
         }
 
