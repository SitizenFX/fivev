--- a/net/minecraft/client/renderer/block/BlockRenderDispatcher.java
+++ b/net/minecraft/client/renderer/block/BlockRenderDispatcher.java
@@ -49,12 +_,17 @@
         return this.blockModelShaper;
     }
 
+    @Deprecated //Forge: Model data parameter
     public void renderBreakingTexture(BlockState p_110919_, BlockPos p_110920_, BlockAndTintGetter p_110921_, PoseStack p_110922_, VertexConsumer p_110923_) {
+        renderBreakingTexture(p_110919_, p_110920_, p_110921_, p_110922_, p_110923_, net.minecraftforge.client.model.data.ModelData.EMPTY);
+    }
+
+    public void renderBreakingTexture(BlockState p_110919_, BlockPos p_110920_, BlockAndTintGetter p_110921_, PoseStack p_110922_, VertexConsumer p_110923_, net.minecraftforge.client.model.data.ModelData modelData) {
         if (p_110919_.getRenderShape() == RenderShape.MODEL) {
             BlockStateModel blockstatemodel = this.blockModelShaper.getBlockModel(p_110919_);
             this.singleThreadRandom.setSeed(p_110919_.getSeed(p_110920_));
             this.singleThreadPartList.clear();
-            blockstatemodel.collectParts(this.singleThreadRandom, this.singleThreadPartList);
+            blockstatemodel.collectParts(this.singleThreadRandom, this.singleThreadPartList, modelData, null);
             this.modelRenderer.tesselateBlock(p_110921_, this.singleThreadPartList, p_110919_, p_110920_, p_110922_, p_110923_, true, OverlayTexture.NO_OVERLAY);
         }
     }
@@ -97,7 +_,12 @@
         return this.blockModelShaper.getBlockModel(p_110911_);
     }
 
+    @Deprecated //Forge: Model data and render type parameter
     public void renderSingleBlock(BlockState p_110913_, PoseStack p_110914_, MultiBufferSource p_110915_, int p_110916_, int p_110917_) {
+        renderSingleBlock(p_110913_, p_110914_, p_110915_, p_110916_, p_110917_, net.minecraftforge.client.model.data.ModelData.EMPTY, null);
+    }
+
+    public void renderSingleBlock(BlockState p_110913_, PoseStack p_110914_, MultiBufferSource p_110915_, int p_110916_, int p_110917_, net.minecraftforge.client.model.data.ModelData modelData, net.minecraft.client.renderer.RenderType renderType) {
         RenderShape rendershape = p_110913_.getRenderShape();
         if (rendershape != RenderShape.INVISIBLE) {
             BlockStateModel blockstatemodel = this.getBlockModel(p_110913_);
@@ -105,8 +_,9 @@
             float f = (i >> 16 & 0xFF) / 255.0F;
             float f1 = (i >> 8 & 0xFF) / 255.0F;
             float f2 = (i & 0xFF) / 255.0F;
+            for (var rt : blockstatemodel.getRenderTypes(p_110913_, RandomSource.create(42), modelData))
             ModelBlockRenderer.renderModel(
-                p_110914_.last(), p_110915_.getBuffer(ItemBlockRenderTypes.getRenderType(p_110913_)), blockstatemodel, f, f1, f2, p_110916_, p_110917_
+                p_110914_.last(), p_110915_.getBuffer(renderType != null ? renderType : net.minecraftforge.client.RenderTypeHelper.getEntityRenderType(rt)), blockstatemodel, f, f1, f2, p_110916_, p_110917_, modelData, rt
             );
             this.specialBlockModelRenderer.get().renderByBlock(p_110913_.getBlock(), ItemDisplayContext.NONE, p_110914_, p_110915_, p_110916_, p_110917_);
         }
