--- a/net/minecraft/client/gui/screens/inventory/AbstractContainerScreen.java
+++ b/net/minecraft/client/gui/screens/inventory/AbstractContainerScreen.java
@@ -107,6 +_,7 @@
         int i = this.leftPos;
         int j = this.topPos;
         super.render(p_409971_, p_409213_, p_408205_, p_408282_);
+        net.minecraftforge.client.event.ForgeEventFactoryClient.onContainerRenderBackground(this, p_409971_, p_409213_, p_408205_);
         p_409971_.pose().pushMatrix();
         p_409971_.pose().translate(i, j);
         this.renderLabels(p_409971_, p_409213_, p_408205_);
@@ -119,6 +_,8 @@
             this.onStopHovering(slot);
         }
 
+        net.minecraftforge.client.event.ForgeEventFactoryClient.onContainerRenderForeground(this, p_409971_, p_409213_, p_408205_);
+
         p_409971_.pose().popMatrix();
     }
 
@@ -202,7 +_,7 @@
             ItemStack itemstack = this.hoveredSlot.getItem();
             if (this.menu.getCarried().isEmpty() || this.showTooltipWithItemInHand(itemstack)) {
                 p_283594_.setTooltipForNextFrame(
-                    this.font, this.getTooltipFromContainerItem(itemstack), itemstack.getTooltipImage(), p_282171_, p_281909_, itemstack.get(DataComponents.TOOLTIP_STYLE)
+                    this.font, this.getTooltipFromContainerItem(itemstack), itemstack.getTooltipImage(), itemstack, p_282171_, p_281909_
                 );
             }
         }
@@ -218,7 +_,8 @@
 
     private void renderFloatingItem(GuiGraphics p_282567_, ItemStack p_281330_, int p_281772_, int p_281689_, @Nullable String p_282568_) {
         p_282567_.renderItem(p_281330_, p_281772_, p_281689_);
-        p_282567_.renderItemDecorations(this.font, p_281330_, p_281772_, p_281689_ - (this.draggingItem.isEmpty() ? 0 : 8), p_282568_);
+        var font = net.minecraftforge.client.extensions.common.IClientItemExtensions.of(p_281330_).getFont(p_281330_, net.minecraftforge.client.extensions.common.IClientItemExtensions.FontContext.ITEM_COUNT);
+        p_282567_.renderItemDecorations(font == null ? this.font : font, p_281330_, p_281772_, p_281689_ - (this.draggingItem.isEmpty() ? 0 : 8), p_282568_);
     }
 
     protected void renderLabels(GuiGraphics p_281635_, int p_282681_, int p_283686_) {
@@ -319,7 +_,8 @@
         if (super.mouseClicked(p_97748_, p_97749_, p_97750_)) {
             return true;
         } else {
-            boolean flag = this.minecraft.options.keyPickItem.matchesMouse(p_97750_) && this.minecraft.player.hasInfiniteMaterials();
+            InputConstants.Key mouseKey = InputConstants.Type.MOUSE.getOrCreate(p_97750_);
+            boolean flag = this.minecraft.options.keyPickItem.isActiveAndMatches(mouseKey);
             Slot slot = this.getHoveredSlot(p_97748_, p_97749_);
             long i = Util.getMillis();
             this.doubleclick = this.lastClickSlot == slot && i - this.lastClickTime < 250L && this.lastClickButton == p_97750_;
@@ -330,6 +_,7 @@
                 int j = this.leftPos;
                 int k = this.topPos;
                 boolean flag1 = this.hasClickedOutside(p_97748_, p_97749_, j, k, p_97750_);
+                if (slot != null) flag1 = false; // Forge, prevent dropping of items through slots outside of GUI boundaries
                 int l = -1;
                 if (slot != null) {
                     l = slot.index;
@@ -355,7 +_,7 @@
                         }
                     } else if (!this.isQuickCrafting) {
                         if (this.menu.getCarried().isEmpty()) {
-                            if (flag) {
+                            if (this.minecraft.options.keyPickItem.isActiveAndMatches(mouseKey)) {
                                 this.slotClicked(slot, l, p_97750_, ClickType.CLONE);
                             } else {
                                 boolean flag2 = l != -999
@@ -383,7 +_,7 @@
                                 this.quickCraftingType = 0;
                             } else if (p_97750_ == 1) {
                                 this.quickCraftingType = 1;
-                            } else if (flag) {
+                            } else if (this.minecraft.options.keyPickItem.isActiveAndMatches(mouseKey)) {
                                 this.quickCraftingType = 2;
                             }
                         }
@@ -459,10 +_,13 @@
 
     @Override
     public boolean mouseReleased(double p_97812_, double p_97813_, int p_97814_) {
+        super.mouseReleased(p_97812_, p_97813_, p_97814_); //Forge, Call parent to release buttons
         Slot slot = this.getHoveredSlot(p_97812_, p_97813_);
         int i = this.leftPos;
         int j = this.topPos;
         boolean flag = this.hasClickedOutside(p_97812_, p_97813_, i, j, p_97814_);
+        if (slot != null) flag = false; // Forge, prevent dropping of items through slots outside of GUI boundaries
+        InputConstants.Key mouseKey = InputConstants.Type.MOUSE.getOrCreate(p_97814_);
         int k = -1;
         if (slot != null) {
             k = slot.index;
@@ -479,7 +_,7 @@
                         if (slot2 != null
                             && slot2.mayPickup(this.minecraft.player)
                             && slot2.hasItem()
-                            && slot2.container == slot.container
+                            && slot2.isSameInventory(slot)
                             && AbstractContainerMenu.canItemQuickReplace(slot2, this.lastQuickMoved, true)) {
                             this.slotClicked(slot2, slot2.index, p_97814_, ClickType.QUICK_MOVE);
                         }
@@ -545,7 +_,7 @@
 
                 this.slotClicked(null, -999, AbstractContainerMenu.getQuickcraftMask(2, this.quickCraftingType), ClickType.QUICK_CRAFT);
             } else if (!this.menu.getCarried().isEmpty()) {
-                if (this.minecraft.options.keyPickItem.matchesMouse(p_97814_)) {
+                if (this.minecraft.options.keyPickItem.isActiveAndMatches(mouseKey)) {
                     this.slotClicked(slot, k, p_97814_, ClickType.CLONE);
                 } else {
                     boolean flag1 = k != -999
@@ -622,9 +_,10 @@
 
     @Override
     public boolean keyPressed(int p_97765_, int p_97766_, int p_97767_) {
+        InputConstants.Key mouseKey = InputConstants.getKey(p_97765_, p_97766_);
         if (super.keyPressed(p_97765_, p_97766_, p_97767_)) {
             return true;
-        } else if (this.minecraft.options.keyInventory.matches(p_97765_, p_97766_)) {
+        } else if (this.minecraft.options.keyInventory.isActiveAndMatches(mouseKey)) {
             this.onClose();
             return true;
         } else {
@@ -698,6 +_,13 @@
 
         super.onClose();
     }
+
+    @org.jetbrains.annotations.Nullable
+    public Slot getSlotUnderMouse() { return this.hoveredSlot; }
+    public int getGuiLeft() { return leftPos; }
+    public int getGuiTop() { return topPos; }
+    public int getXSize() { return imageWidth; }
+    public int getYSize() { return imageHeight; }
 
     @OnlyIn(Dist.CLIENT)
     record SnapbackData(ItemStack item, Vector2i start, Vector2i end, long time) {
