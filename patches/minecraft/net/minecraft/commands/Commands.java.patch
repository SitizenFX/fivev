--- a/net/minecraft/commands/Commands.java
+++ b/net/minecraft/commands/Commands.java
@@ -255,7 +_,7 @@
             ChaseCommand.register(this.dispatcher);
         }
 
-        if (SharedConstants.DEBUG_DEV_COMMANDS || SharedConstants.IS_RUNNING_IN_IDE) {
+        if (SharedConstants.DEBUG_DEV_COMMANDS || net.minecraftforge.gametest.ForgeGameTestHooks.isGametestEnabled()) {
             RaidCommand.register(this.dispatcher, p_230944_);
             DebugPathCommand.register(this.dispatcher);
             DebugMobSpawningCommand.register(this.dispatcher);
@@ -288,6 +_,7 @@
         if (p_230943_.includeIntegrated) {
             PublishCommand.register(this.dispatcher);
         }
+        net.minecraftforge.event.ForgeEventFactory.onCommandRegister(this.dispatcher, p_230943_, p_230944_);
 
         this.dispatcher.setConsumer(ExecutionCommandSource.resultConsumer());
     }
@@ -310,9 +_,18 @@
     public void performCommand(ParseResults<CommandSourceStack> p_242844_, String p_242841_) {
         CommandSourceStack commandsourcestack = p_242844_.getContext().getSource();
         Profiler.get().push(() -> "/" + p_242841_);
-        ContextChain<CommandSourceStack> contextchain = finishParsing(p_242844_, p_242841_, commandsourcestack);
 
         try {
+            var event = new net.minecraftforge.event.CommandEvent(p_242844_);
+            if (net.minecraftforge.event.CommandEvent.BUS.post(event)) {
+                if (event.getException() instanceof Exception exception) {
+                    throw exception;
+                } else if (event.getException() != null) {
+                    com.google.common.base.Throwables.throwIfUnchecked(event.getException());
+                }
+                return;
+            }
+            ContextChain<CommandSourceStack> contextchain = finishParsing(event.getParseResults(), p_242841_, commandsourcestack);
             if (contextchain != null) {
                 executeCommandInContext(
                     commandsourcestack,
@@ -403,7 +_,10 @@
         Map<CommandNode<CommandSourceStack>, CommandNode<CommandSourceStack>> map = new HashMap<>();
         RootCommandNode<CommandSourceStack> rootcommandnode = new RootCommandNode<>();
         map.put(this.dispatcher.getRoot(), rootcommandnode);
-        fillUsableCommands(this.dispatcher.getRoot(), rootcommandnode, p_82096_.createCommandSourceStack(), map);
+        // FORGE: Use our own command node merging method to handle redirect nodes properly, see issue #7551
+        net.minecraftforge.server.command.CommandHelper.mergeCommandNode(this.dispatcher.getRoot(), rootcommandnode, map, p_82096_.createCommandSourceStack(), ctx -> 0, suggest -> suggest);
+        // FORGE: Clean any modded command content if the client is vanilla
+        rootcommandnode = net.minecraftforge.server.command.CommandHelper.filterCommandList(p_82096_.connection.getConnection(), rootcommandnode);
         p_82096_.connection.send(new ClientboundCommandsPacket(rootcommandnode, COMMAND_NODE_INSPECTOR));
     }
 
